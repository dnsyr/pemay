-- Table Pegawai
CREATE TABLE Pegawai (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL,
  Username VARCHAR2(20) UNIQUE NOT NULL,
  Password VARCHAR2(255) NOT NULL, -- for hashed password storage
  Posisi VARCHAR2(20) NOT NULL,
  Email VARCHAR2(50) NOT NULL,
  NomorTelpon VARCHAR2(15) NOT NULL
);

CREATE SEQUENCE Pegawai_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Pegawai_BI
BEFORE INSERT ON Pegawai
FOR EACH ROW
BEGIN
  :NEW.ID := Pegawai_Seq.NEXTVAL;
END;
/

-- Table Stock
CREATE TABLE Stock (
  ID NUMBER PRIMARY KEY,
  NamaItem VARCHAR2(50) NOT NULL,
  Jumlah NUMBER NOT NULL,
  Harga NUMBER NOT NULL,
  Kategori VARCHAR2(20) NOT NULL
);

CREATE SEQUENCE Stock_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Stock_BI
BEFORE INSERT ON Stock
FOR EACH ROW
BEGIN
  :NEW.ID := Stock_Seq.NEXTVAL;
END;
/

-- Table Laporan
CREATE TABLE Laporan (
  ID NUMBER PRIMARY KEY,
  Jenis VARCHAR2(20) NOT NULL,
  Tanggal DATE NOT NULL,
  Judul VARCHAR2(50) NOT NULL,
  Isi VARCHAR2(255) NOT NULL,
  Pegawai_ID NUMBER NOT NULL,
  CONSTRAINT fk_laporan_pegawai FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID)
);

CREATE SEQUENCE Laporan_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Laporan_BI
BEFORE INSERT ON Laporan
FOR EACH ROW
BEGIN
  :NEW.ID := Laporan_Seq.NEXTVAL;
END;
/

-- Table PemilikHewan
CREATE TABLE PemilikHewan (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL,
  Email VARCHAR2(50) NOT NULL,
  NomorTelpon VARCHAR2(15) NOT NULL
);

CREATE SEQUENCE PemilikHewan_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER PemilikHewan_BI
BEFORE INSERT ON PemilikHewan
FOR EACH ROW
BEGIN
  :NEW.ID := PemilikHewan_Seq.NEXTVAL;
END;
/

-- Table Mengelola
CREATE TABLE Mengelola (
  Pegawai_ID NUMBER NOT NULL,
  Stock_ID NUMBER NOT NULL,
  PRIMARY KEY (Pegawai_ID, Stock_ID),
  CONSTRAINT fk_mengelola_pegawai FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID),
  CONSTRAINT fk_mengelola_stock FOREIGN KEY (Stock_ID) REFERENCES Stock(ID)
);

-- Table Hewan
CREATE TABLE Hewan (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL,
  Jenis VARCHAR2(20) NOT NULL,
  Spesies VARCHAR2(20) NOT NULL,
  Gender VARCHAR2(15) NOT NULL,
  Berat NUMBER NOT NULL,
  TanggalLahir DATE,
  PemilikHewan_ID NUMBER NOT NULL,
  CONSTRAINT fk_hewan_pemilik FOREIGN KEY (PemilikHewan_ID) REFERENCES PemilikHewan(ID)
);

CREATE SEQUENCE Hewan_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Hewan_BI
BEFORE INSERT ON Hewan
FOR EACH ROW
BEGIN
  :NEW.ID := Hewan_Seq.NEXTVAL;
END;
/

-- Table Hotel
CREATE TABLE Hotel
(
  ID NUMBER PRIMARY KEY,
  CheckIn DATE NOT NULL,
  CheckOut DATE NOT NULL,
  Biaya NUMBER NOT NULL,
  Hewan_ID NUMBER NOT NULL,
  Pegawai_ID NUMBER NOT NULL,
  FOREIGN KEY (Hewan_ID) REFERENCES Hewan(ID),
  FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID)
);

CREATE SEQUENCE Hotel_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Hotel_BI
BEFORE INSERT ON Hotel
FOR EACH ROW
BEGIN
  :NEW.ID := Hotel_Seq.NEXTVAL;
END;
/

-- Table Kandang
CREATE TABLE Kandang
(
  Nomor NUMBER PRIMARY KEY,
  Ukuran VARCHAR2(3) NOT NULL,
  Status VARCHAR2(20) NOT NULL,
  Hotel_ID NUMBER NOT NULL,
  FOREIGN KEY (Hotel_ID) REFERENCES Hotel(ID)
);

CREATE SEQUENCE Kandang_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Kandang_BI
BEFORE INSERT ON Kandang
FOR EACH ROW
BEGIN
  :NEW.Nomor := Kandang_Seq.NEXTVAL;
END;
/

-- Table Grooming
CREATE TABLE Grooming
(
  ID NUMBER PRIMARY KEY,
  Jenis VARCHAR2(20) NOT NULL,
  Tanggal DATE NOT NULL,
  Biaya NUMBER NOT NULL,
  Hewan_ID NUMBER NOT NULL,
  Pegawai_ID NUMBER NOT NULL,
  FOREIGN KEY (Hewan_ID) REFERENCES Hewan(ID),
  FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID)
);

CREATE SEQUENCE Grooming_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Grooming_BI
BEFORE INSERT ON Grooming
FOR EACH ROW
BEGIN
  :NEW.ID := Grooming_Seq.NEXTVAL;
END;
/

-- Table RiwayatMedis
CREATE TABLE RiwayatMedis
(
  ID NUMBER PRIMARY KEY,
  Penyakit VARCHAR2(255),
  Vaksin VARCHAR2(255),
  Alergi VARCHAR2(255),
  Perawatan VARCHAR2(255),
  Hewan_ID NUMBER NOT NULL,
  FOREIGN KEY (Hewan_ID) REFERENCES Hewan(ID)
);

CREATE SEQUENCE RiwayatMedis_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER RiwayatMedis_BI
BEFORE INSERT ON RiwayatMedis
FOR EACH ROW
BEGIN
  :NEW.ID := RiwayatMedis_Seq.NEXTVAL;
END;
/

-- Table Treatment
CREATE TABLE Treatment
(
  ID NUMBER PRIMARY KEY,
  Jenis VARCHAR2(20) NOT NULL,
  Tanggal DATE NOT NULL,
  Biaya NUMBER NOT NULL,
  Description VARCHAR2(255) NOT NULL,
  Status VARCHAR2(20) NOT NULL,
  Pegawai_ID NUMBER NOT NULL,
  Hewan_ID NUMBER NOT NULL,
  FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID),
  FOREIGN KEY (Hewan_ID) REFERENCES Hewan(ID)
);

CREATE SEQUENCE Treatment_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Treatment_BI
BEFORE INSERT ON Treatment
FOR EACH ROW
BEGIN
  :NEW.ID := Treatment_Seq.NEXTVAL;
END;
/

-- Table Obat
CREATE TABLE Obat
(
  ID NUMBER PRIMARY KEY,
  Dosis VARCHAR2(10) NOT NULL,
  Nama VARCHAR2(50) NOT NULL,
  Frekuensi VARCHAR2(20) NOT NULL,
  Instruksi VARCHAR2(255) NOT NULL,
  Harga NUMBER NOT NULL,
  Kategori VARCHAR2(20) NOT NULL,
  Treatment_ID NUMBER NOT NULL,
  FOREIGN KEY (Treatment_ID) REFERENCES Treatment(ID)
);

CREATE SEQUENCE Obat_Seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER Obat_BI
BEFORE INSERT ON Obat
FOR EACH ROW
BEGIN
  :NEW.ID := Obat_Seq.NEXTVAL;
END;
/

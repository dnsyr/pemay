-- Sequence untuk auto increment pada tabel yang membutuhkan ID unik
CREATE SEQUENCE seq_pegawai START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_kandang START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_laporan START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_pemilikhewan START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_kategoriproduk START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_kategoriobat START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_jenislayanansalon START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_jenislayananmedis START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_hewan START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_produk START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_layananhotel START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_layanansalon START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_layananmedis START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_obat START WITH 1 INCREMENT BY 1;
-- VARRAY untuk menyimpan array ID dari jenis layanan medis dan layanan salon
CREATE TYPE ArrayJenisLayananSalon AS VARRAY(15) OF NUMBER;
CREATE TYPE ArrayJenisLayananMedis AS VARRAY(15) OF NUMBER;
-- Tabel Pegawai
CREATE TABLE Pegawai (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL,
  Username VARCHAR2(15) NOT NULL UNIQUE,
  Password VARCHAR2(255) NOT NULL,
  Posisi VARCHAR2(15) NOT NULL,
  Email VARCHAR2(50) NOT NULL UNIQUE,
  NomorTelpon VARCHAR2(20) NOT NULL UNIQUE,
  onDelete NUMBER(1) DEFAULT 0
);
CREATE TRIGGER trg_pegawai BEFORE
INSERT ON Pegawai FOR EACH ROW BEGIN
SELECT seq_pegawai.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel Kandang
CREATE TABLE Kandang (
  Nomor NUMBER PRIMARY KEY,
  Ukuran VARCHAR2(10) NOT NULL,
  Status VARCHAR2(10) NOT NULL,
  onDelete NUMBER(1) DEFAULT 0
);
CREATE TRIGGER trg_kandang BEFORE
INSERT ON Kandang FOR EACH ROW BEGIN
SELECT seq_kandang.NEXTVAL INTO :NEW.Nomor
FROM dual;
END;
/ -- Tabel Laporan
CREATE TABLE Laporan (
  ID NUMBER PRIMARY KEY,
  Jenis VARCHAR2(15) NOT NULL,
  Tanggal TIMESTAMP NOT NULL,
  Judul VARCHAR2(50) NOT NULL,
  Isi VARCHAR2(255) NOT NULL,
  onDelete NUMBER(1) DEFAULT 0,
  Pegawai_ID NUMBER NOT NULL,
  FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID)
);
CREATE TRIGGER trg_laporan BEFORE
INSERT ON Laporan FOR EACH ROW BEGIN
SELECT seq_laporan.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel PemilikHewan
CREATE TABLE PemilikHewan (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL,
  Email VARCHAR2(50) NOT NULL UNIQUE,
  NomorTelpon VARCHAR2(20) NOT NULL UNIQUE,
  onDelete NUMBER(1) DEFAULT 0
);
CREATE TRIGGER trg_pemilikhewan BEFORE
INSERT ON PemilikHewan FOR EACH ROW BEGIN
SELECT seq_pemilikhewan.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel KategoriProduk
CREATE TABLE KategoriProduk (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL UNIQUE,
  onDelete NUMBER(1) DEFAULT 0
);
CREATE TRIGGER trg_kategoriproduk BEFORE
INSERT ON KategoriProduk FOR EACH ROW BEGIN
SELECT seq_kategoriproduk.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel KategoriObat
CREATE TABLE KategoriObat (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL UNIQUE,
  onDelete NUMBER(1) DEFAULT 0
);
CREATE TRIGGER trg_kategoriobat BEFORE
INSERT ON KategoriObat FOR EACH ROW BEGIN
SELECT seq_kategoriobat.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel JenisLayananSalon
CREATE TABLE JenisLayananSalon (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL UNIQUE,
  Biaya NUMBER NOT NULL,
  onDelete NUMBER(1) DEFAULT 0
);
CREATE TRIGGER trg_jenislayanansalon BEFORE
INSERT ON JenisLayananSalon FOR EACH ROW BEGIN
SELECT seq_jenislayanansalon.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel JenisLayananMedis
CREATE TABLE JenisLayananMedis (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL UNIQUE,
  Biaya NUMBER NOT NULL,
  onDelete NUMBER(1) DEFAULT 0
);
CREATE TRIGGER trg_jenislayananmedis BEFORE
INSERT ON JenisLayananMedis FOR EACH ROW BEGIN
SELECT seq_jenislayananmedis.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel Hewan
CREATE TABLE Hewan (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL,
  Ras VARCHAR2(20) NOT NULL,
  Spesies VARCHAR2(10) NOT NULL,
  Gender VARCHAR2(10) NOT NULL,
  Berat NUMBER NOT NULL,
  TanggalLahir TIMESTAMP,
  Tinggi NUMBER NOT NULL,
  Lebar NUMBER NOT NULL,
  onDelete NUMBER(1) DEFAULT 0,
  PemilikHewan_ID NUMBER NOT NULL,
  FOREIGN KEY (PemilikHewan_ID) REFERENCES PemilikHewan(ID)
);
CREATE TRIGGER trg_hewan BEFORE
INSERT ON Hewan FOR EACH ROW BEGIN
SELECT seq_hewan.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel Produk
CREATE TABLE Produk (
  ID NUMBER PRIMARY KEY,
  Nama VARCHAR2(50) NOT NULL UNIQUE,
  Jumlah NUMBER NOT NULL,
  Harga NUMBER NOT NULL,
  onDelete NUMBER(1) DEFAULT 0,
  Pegawai_ID NUMBER NOT NULL,
  KategoriProduk_ID NUMBER NOT NULL,
  FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID),
  FOREIGN KEY (KategoriProduk_ID) REFERENCES KategoriProduk(ID)
);
CREATE TRIGGER trg_produk BEFORE
INSERT ON Produk FOR EACH ROW BEGIN
SELECT seq_produk.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel LayananHotel
CREATE TABLE LayananHotel (
  ID NUMBER PRIMARY KEY,
  CheckIn TIMESTAMP NOT NULL,
  CheckOut TIMESTAMP NOT NULL,
  TotalBiaya NUMBER NOT NULL,
  Status VARCHAR2(15) NOT NULL,
  onDelete NUMBER(1) DEFAULT 0,
  Hewan_ID NUMBER NOT NULL,
  Pegawai_ID NUMBER NOT NULL,
  Kandang_Nomor NUMBER NOT NULL,
  FOREIGN KEY (Hewan_ID) REFERENCES Hewan(ID),
  FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID),
  FOREIGN KEY (Kandang_Nomor) REFERENCES Kandang(Nomor)
);
CREATE TRIGGER trg_layananhotel BEFORE
INSERT ON LayananHotel FOR EACH ROW BEGIN
SELECT seq_layananhotel.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel LayananSalon
CREATE TABLE LayananSalon (
  ID NUMBER PRIMARY KEY,
  Tanggal TIMESTAMP NOT NULL,
  TotalBiaya NUMBER NOT NULL,
  JenisLayanan ArrayJenisLayananSalon,
  -- Array untuk menyimpan banyak ID dari JenisLayananSalon
  Status VARCHAR2(15) NOT NULL,
  onDelete NUMBER(1) DEFAULT 0,
  Hewan_ID NUMBER NOT NULL,
  Pegawai_ID NUMBER NOT NULL,
  FOREIGN KEY (Hewan_ID) REFERENCES Hewan(ID),
  FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID)
);
CREATE TRIGGER trg_layanansalon BEFORE
INSERT ON LayananSalon FOR EACH ROW BEGIN
SELECT seq_layanansalon.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel LayananMedis
CREATE TABLE LayananMedis (
  ID NUMBER PRIMARY KEY,
  Tanggal TIMESTAMP NOT NULL,
  TotalBiaya NUMBER NOT NULL,
  Description VARCHAR2(255) NOT NULL,
  Status VARCHAR2(15) NOT NULL,
  JenisLayanan ArrayJenisLayananMedis,
  -- Array untuk menyimpan banyak ID dari JenisLayananMedis
  onDelete NUMBER(1) DEFAULT 0,
  Pegawai_ID NUMBER NOT NULL,
  Hewan_ID NUMBER NOT NULL,
  FOREIGN KEY (Pegawai_ID) REFERENCES Pegawai(ID),
  FOREIGN KEY (Hewan_ID) REFERENCES Hewan(ID)
);
CREATE TRIGGER trg_layananmedis BEFORE
INSERT ON LayananMedis FOR EACH ROW BEGIN
SELECT seq_layananmedis.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/ -- Tabel Obat
CREATE TABLE Obat (
  ID NUMBER PRIMARY KEY,
  Dosis VARCHAR2(15) NOT NULL,
  Nama VARCHAR2(50) NOT NULL,
  Frekuensi VARCHAR2(20) NOT NULL,
  Instruksi VARCHAR2(255) NOT NULL,
  Harga NUMBER NOT NULL,
  onDelete NUMBER(1) DEFAULT 0,
  LayananMedis_ID NUMBER NOT NULL,
  KategoriObat_ID NUMBER NOT NULL,
  FOREIGN KEY (LayananMedis_ID) REFERENCES LayananMedis(ID),
  FOREIGN KEY (KategoriObat_ID) REFERENCES KategoriObat(ID)
);
CREATE TRIGGER trg_obat BEFORE
INSERT ON Obat FOR EACH ROW BEGIN
SELECT seq_obat.NEXTVAL INTO :NEW.ID
FROM dual;
END;
/